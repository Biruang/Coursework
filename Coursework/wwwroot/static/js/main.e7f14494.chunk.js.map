{"version":3,"sources":["actions/taskListsActions.js","actions/taskActions.js","containers/header/header.js","actions/purposeActions.js","components/List/list.jsx","containers/sidebar/sidebar.js","components/TaskTable/taskTable.jsx","components/TasksControl/btnGroup1/postponeButton.jsx","components/TasksControl/btnGroup1/completeButton.jsx","components/TasksControl/btnGroup1/btnGroup1.jsx","components/TasksControl/btnGroup2/priorityButton.jsx","components/TasksControl/btnGroup2/reminderButton.jsx","components/TasksControl/btnGroup2/tagsButton.jsx","components/TasksControl/btnGroup2/btnGroup2.jsx","components/TasksControl/tasksControl.jsx","components/createTaskString/createTaskString.jsx","containers/tasksCard/tasksCard.js","components/Task/task.jsx","containers/main/main.js","actions/auth.js","containers/auth/auth.js","containers/registration/registration.js","containers/app.js","actions/taskCard.js","reducers/tasks.js","reducers/taskLists.js","reducers/purposes.js","reducers/auth.js","reducers/root.js","store/configureStore.js","index.js"],"names":["GET_TASK_LISTS_REQUEST","GET_TASK_LISTS_SUCCESS","GET_TASK_LISTS_EXCEPTION","getTaskLists","dispatch","type","payload","fetch","then","response","json","catch","exc","GET_TASKS_REQUEST","GET_TASKS_SUCCESS","GET_TASKS_ERROR","CREATE_TASK_REQUEST","CREATE_TASK_SUCCESS","CREATE_TASK_BAD","CREATE_TASK_ERROR","COMPLETE_TASK_REQUEST","COMPLETE_TASK_SUCCESS","COMPLETE_TASK_ERROR","getTasks","selectTask","id","Header","_this","this","react_default","a","createElement","className","react_router_dom","to","onClick","props","React","Component","connect","store","tasks","taskLists","GET_PURPOSE_REQUEST","GET_PURPOSE_SUCCESS","GET_PURPOSE_EXCEPTION","List","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","D","setState","isOpen","state","isLoading","_this2","header","name","index_es","icon","faAngleDown","faAngleRight","list","map","element","key","clickFunction","body","Sidebar","getPurposes","_this$props","purposes","components_List_list","lists","getTasksByList","getTasksByPurpose","optionsDay","month","day","optionsDayPlusYear","year","optionsTime","timezone","hour","minute","second","TaskTable","task","date","Date","parse","creationTime","now","serializedDate","toLocaleString","getDay","getDate","getFullYear","scope","PostponeButton","data-toggle","aria-haspopup","aria-expanded","faCalendarPlus","CompleteButton","selected","forEach","completeTask","faCheck","BtnGroup1","completeButton","postponeButton","PriorityButton","faExclamation","ReminderButton","faCalendarDay","TagsButton","faTags","BtnGroup2","priorityButton","reminderButton","tagsButton","TasksButtons","open","Fragment","btnGroup1","btnGroup2","createTaskString","onChange","document","getElementById","value","length","createTask","faPlus","TasksCard","page","tsk","completed","push","TasksControl_tasksControl","components_createTaskString_createTaskString","addTask","TaskTable_taskTable","data","myInit","method","headers","Accept","Content-Type","JSON","stringify","status","options","Task","creatonTime","isFinite","reminders","reminder","triggerTime","purpouse","description","Main","bind","assertThisInitialized","arr","flag","i","splice","concat","console","log","aside","t","Task_task","tasksCard_tasksCard","CHECK_LOGIN_REQUEST","CHECK_LOGIN_SUCCESS","CHECK_LOGIN_BAD","CHECK_LOGIN_ERROR","checkAuth","login","password","Login","Password","Auth","auth","isLogged","react_router","for","class","text","Registration","isCreated","App","containers_header_header","sidebar_sidebar","main","path","component","children","SELECT_TASK","initialState","color","loading","errors","token","rootReducer","combineReducers","arguments","undefined","action","objectSpread","err","join","createStore","applyMiddleware","logger","thunk","ReactDOM","render","es","containers_app"],"mappings":"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","file":"static/js/main.e7f14494.chunk.js","sourcesContent":["export const GET_TASK_LISTS_REQUEST = 'GET_TASK_LISTS_REQUEST';\r\nexport const GET_TASK_LISTS_SUCCESS = 'GET_TASK_LISTS_SUCCESS';\r\nexport const GET_TASK_LISTS_EXCEPTION = 'GET_TASK_LISTS_EXCEPTION';\r\n\r\nexport function getTaskLists() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_TASK_LISTS_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    fetch('api/taskLists')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_TASK_LISTS_SUCCESS,\r\n          payload: response\r\n        });\r\n      })\r\n      .catch(exc => {\r\n        dispatch({\r\n          type: GET_TASK_LISTS_EXCEPTION,\r\n          payload: exc\r\n        });\r\n      });\r\n  };\r\n}\r\n","export const GET_TASKS_REQUEST = 'GET_TASKS_REQUEST';\r\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS';\r\nexport const GET_TASKS_ERROR = 'GET_TASKS_ERROR';\r\nexport const CREATE_TASK_REQUEST = 'CREATE_TASK_REQUEST';\r\nexport const CREATE_TASK_SUCCESS = 'CREATE_TASK_SUCCESS';\r\nexport const CREATE_TASK_BAD = 'CREATE_TASK_BAD';\r\nexport const CREATE_TASK_ERROR = 'CREATE_TASK_ERROR';\r\nexport const COMPLETE_TASK_REQUEST = 'COMPLETE_TASK_REQUEST';\r\nexport const COMPLETE_TASK_SUCCESS = 'COMPLETE_TASK_SUCCESS';\r\nexport const COMPLETE_TASK_ERROR = 'COMPLETE_TASK_ERROR';\r\nexport const SELECT_TASK = 'COMPLETE_TASK_ERROR';\r\n\r\nexport function getTasks() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_TASKS_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    fetch('api/tasks')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_TASKS_SUCCESS,\r\n          payload: response\r\n        });\r\n      })\r\n      .catch(exc => {\r\n        dispatch({\r\n          type: GET_TASKS_ERROR,\r\n          payload: exc\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getTasksByList(id) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_TASKS_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    fetch('api/taskLists/' + id + '/tasks')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_TASKS_SUCCESS,\r\n          payload: response\r\n        });\r\n      })\r\n      .catch(exc => {\r\n        dispatch({\r\n          type: GET_TASKS_ERROR,\r\n          payload: exc\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getTasksByPurpose(id) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_TASKS_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    fetch('api/purposes/' + id + '/tasks')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_TASKS_SUCCESS,\r\n          payload: response\r\n        });\r\n      })\r\n      .catch(exc => {\r\n        dispatch({\r\n          type: GET_TASKS_ERROR,\r\n          payload: exc\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function addTask(name) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: CREATE_TASK_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    var data = {\r\n      name: name\r\n    };\r\n    var myInit = {\r\n      method: 'post',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    };\r\n\r\n    fetch('api/tasks', myInit)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .then(response => {\r\n        if (response.status === 201) {\r\n          dispatch({\r\n            type: CREATE_TASK_SUCCESS,\r\n            payload: response\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: CREATE_TASK_BAD,\r\n            payload: response\r\n          });\r\n        }\r\n      })\r\n      .catch(exc => {\r\n        if (exc.status === 200)\r\n          dispatch({\r\n            type: CREATE_TASK_ERROR,\r\n            payload: exc\r\n          });\r\n      });\r\n  };\r\n}\r\n\r\nexport function selectTask(id) {\r\n  return dispatch =>\r\n    dispatch({\r\n      type: CREATE_TASK_REQUEST,\r\n      payload: id\r\n    });\r\n}\r\n\r\nexport function completeTask(id, state) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: COMPLETE_TASK_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    var data = {\r\n      completed: state\r\n    };\r\n    var myInit = {\r\n      method: 'put',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    };\r\n\r\n    fetch('api/tasks/' + id, myInit)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: COMPLETE_TASK_SUCCESS,\r\n          payload: response\r\n        });\r\n      })\r\n      .catch(exc => {\r\n        if (exc.status === 200)\r\n          dispatch({\r\n            type: COMPLETE_TASK_ERROR,\r\n            payload: exc\r\n          });\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTaskLists } from '../../actions/taskListsActions';\r\nimport { getTasks } from '../../actions/taskActions';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"header-main\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark h-100\">\r\n          <Link\r\n            className=\"navbar-brand\"\r\n            to=\"/\"\r\n            onClick={() => {\r\n              this.props.getTasks();\r\n            }}\r\n          >\r\n            Logo\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    tasks: store.tasks,\r\n    taskLists: store.taskLists\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getTaskLists: () => dispatch(getTaskLists()),\r\n    getTasks: () => dispatch(getTasks())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","export const GET_PURPOSE_REQUEST = 'GET_PURPOSE_REQUEST';\r\nexport const GET_PURPOSE_SUCCESS = 'GET_PURPOSE_SUCCESS';\r\nexport const GET_PURPOSE_EXCEPTION = 'GET_PURPOSE_EXCEPTION';\r\n\r\nexport function getPurposes() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PURPOSE_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    fetch('api/purposes')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_PURPOSE_SUCCESS,\r\n          payload: response\r\n        });\r\n      })\r\n      .catch(exc => {\r\n        dispatch({\r\n          type: GET_PURPOSE_EXCEPTION,\r\n          payload: exc\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight, faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport './list.css';\r\n\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: this.props.isOpen ? true : false,\r\n      isLoading: this.props.isLoading ? true : false\r\n    };\r\n  }\r\n\r\n  D = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    var header = (\r\n      <header\r\n        onClick={this.D}\r\n        className=\"shadow-sm list-group-item list-group-item-action\"\r\n      >\r\n        <h5>{this.props.name}</h5>\r\n        <FontAwesomeIcon\r\n          icon={this.state.isOpen ? faAngleDown : faAngleRight}\r\n        />\r\n      </header>\r\n    );\r\n\r\n    var list = this.props.list.map(element => {\r\n      return (\r\n        <li\r\n          key={element.id}\r\n          className=\"list-group-item list-group-item-action text-truncate\"\r\n          onClick={() => this.props.clickFunction(element.id)}\r\n        >\r\n          {element.name}\r\n        </li>\r\n      );\r\n    });\r\n    if (this.state.isLoading) {\r\n      list = null;\r\n      header = (\r\n        <header className=\"shadow-sm list-group-item list-group-item-action\">\r\n          <h5>{this.props.name}</h5>\r\n          <li className=\"spinner-border spinner-border-sm\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </li>\r\n        </header>\r\n      );\r\n    }\r\n\r\n    var body = this.state.isOpen ? (\r\n      <ul className=\"list-group list-group-flush\">{list}</ul>\r\n    ) : (\r\n      ''\r\n    );\r\n\r\n    return (\r\n      <div className=\"listComponent\">\r\n        {header}\r\n        {body}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTaskLists } from '../../actions/taskListsActions';\r\nimport { getPurposes } from '../../actions/purposeActions';\r\nimport { getTasksByList, getTasksByPurpose } from '../../actions/taskActions';\r\nimport List from '../../components/List/list';\r\nimport './sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getTaskLists();\r\n    this.props.getPurposes();\r\n  }\r\n\r\n  render() {\r\n    const { taskLists, purposes } = this.props;\r\n    return (\r\n      <div className=\"card rounded-0 h-100\">\r\n        <div className=\"card-body\">\r\n          <List\r\n            name=\"Task lists\"\r\n            list={taskLists.lists}\r\n            isOpen\r\n            isLoading={taskLists.isLoading}\r\n            clickFunction={this.props.getTasksByList}\r\n          />\r\n          <List\r\n            name=\"Purposes\"\r\n            list={purposes.purposes}\r\n            isLoading={taskLists.isLoading}\r\n            clickFunction={this.props.getTasksByPurpose}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    taskLists: store.taskLists,\r\n    purposes: store.purposes\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getTaskLists: () => dispatch(getTaskLists()),\r\n    getPurposes: () => dispatch(getPurposes()),\r\n    getTasksByList: id => dispatch(getTasksByList(id)),\r\n    getTasksByPurpose: id => dispatch(getTasksByPurpose(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Sidebar);\r\n","import React from 'react';\r\nimport './taskTable.css';\r\nimport { connect } from 'react-redux';\r\nimport { selectTask } from '../../actions/taskActions';\r\n\r\nconst optionsDay = {\r\n  month: 'long',\r\n  day: 'numeric'\r\n};\r\n\r\nconst optionsDayPlusYear = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric'\r\n};\r\n\r\nconst optionsTime = {\r\n  timezone: 'UTC',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric'\r\n};\r\n\r\nclass TaskTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var tasks = this.props.tasks.map(task => {\r\n      var date = new Date(Date.parse(task.creationTime));\r\n      var now = new Date();\r\n      var serializedDate = date.toLocaleString('ru', optionsTime);\r\n      if (date.getDay() !== now.getDate()) {\r\n        serializedDate = date.toLocaleString('ru', optionsDay);\r\n      }\r\n      if (date.getFullYear() !== now.getFullYear()) {\r\n        serializedDate = date.toLocaleString('ru', optionsDayPlusYear);\r\n      }\r\n      return (\r\n        <tr key={task.id}>\r\n          <td>\r\n            <input\r\n              onClick={() => {\r\n                this.props.selectTask(task.id);\r\n              }}\r\n              type=\"checkbox\"\r\n            />\r\n          </td>\r\n          <td>{task.name}</td>\r\n          <td>\r\n            {task.taskLists.map(list => {\r\n              return <div key={list.id}>{list.name}</div>;\r\n            })}\r\n          </td>\r\n          <td>{serializedDate}</td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <table className=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">\r\n              <input type=\"checkbox\" />\r\n            </th>\r\n            <th scope=\"col\">Название</th>\r\n            <th scope=\"col\">Список</th>\r\n            <th scope=\"col\">Дата создания</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"\">{tasks}</tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectTask: id => dispatch(selectTask(id))\r\n  };\r\n};\r\n\r\nexport default connect(mapDispatchToProps)(TaskTable);\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass PostponeButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"btnGroupDrop2\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-secondary dropdown-toggle\"\r\n\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCalendarPlus} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"dropdown-menu\">\r\n\t\t\t\t\t<p className=\"\">Отложить задачу:</p>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\t1 день\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\t2 дня\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\t3 дня\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\t1 неделю\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\t2 недели\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\t1 месяц\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PostponeButton;\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass CompleteButton extends React.Component {\r\n  render() {\r\n    var select = () => {\r\n      this.props.selected.forEach(task => {\r\n        this.props.completeTask(task, true);\r\n      });\r\n      this.props.getTasks();\r\n    };\r\n\r\n    return (\r\n      <button type=\"button\" className=\"btn btn-secondary\" onClick={select}>\r\n        <FontAwesomeIcon icon={faCheck} />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompleteButton;\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport PostponeButton from './postponeButton';\r\nimport CompleteButton from './completeButton';\r\n\r\nclass BtnGroup1 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group pr-2\">\r\n        <CompleteButton\r\n          completeTask={this.props.completeTask}\r\n          selected={this.props.selected}\r\n          getTasks={this.props.getTasks}\r\n        />\r\n        <PostponeButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BtnGroup1;\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass PriorityButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"btnGroupDrop2\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-secondary dropdown-toggle\"\r\n\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faExclamation} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"dropdown-menu\">\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВысокий приоритет\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tСредний приоритет\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tНизкий приоритет\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PriorityButton;\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarDay } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ReminderButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"btnGroupDrop2\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-secondary dropdown-toggle\"\r\n\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCalendarDay} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"dropdown-menu\">\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ReminderButton;\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTags } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass TagsButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tid=\"btnGroupDrop3\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn btn-secondary dropdown-toggle\"\r\n\t\t\t\t\tdata-toggle=\"dropdown\"\r\n\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTags} />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"dropdown-menu\">\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"dropdown-item\" type=\"button\">\r\n\t\t\t\t\t\tВыпадающая ссылка\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TagsButton;\r\n","import React from 'react';\r\nimport '../tasksControl.css';\r\nimport PriorityButton from './priorityButton';\r\nimport ReminderButton from './reminderButton';\r\nimport TagsButton from './tagsButton';\r\n\r\nclass BtnGroup2 extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"btn-group pr-2\">\r\n\t\t\t\t<PriorityButton />\r\n\t\t\t\t<ReminderButton />\r\n\t\t\t\t<TagsButton />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BtnGroup2;\r\n","import React from 'react';\r\nimport './tasksControl.css';\r\nimport BtnGroup1 from './btnGroup1/btnGroup1';\r\nimport BtnGroup2 from './btnGroup2/btnGroup2';\r\n\r\nclass TasksButtons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: this.props.open ? true : false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var body;\r\n    if (this.state.open) {\r\n      body = (\r\n        <React.Fragment>\r\n          <BtnGroup1\r\n            completeTask={this.props.completeTask}\r\n            selected={this.props.selected}\r\n            getTasks={this.props.getTasks}\r\n          />\r\n          <BtnGroup2 />\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      body = null;\r\n    }\r\n    return <div className=\"btn-toolbar\">{body}</div>;\r\n  }\r\n}\r\n\r\nexport default TasksButtons;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass createTaskString extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          id=\"createTaskField\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={() => {\r\n            this.setState({\r\n              name: document.getElementById('createTaskField').value\r\n            });\r\n          }}\r\n        />\r\n        {this.state.name.length === 0 ? null : (\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={() => {\r\n                this.props.createTask(this.state.name);\r\n                this.props.getTasks();\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default createTaskString;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './tasksCard.css';\r\nimport TaskTable from '../../components/TaskTable/taskTable';\r\nimport { getTasks } from '../../actions/taskActions';\r\nimport TasksControl from '../../components/TasksControl/tasksControl';\r\nimport CreateTaskString from '../../components/createTaskString/createTaskString';\r\nimport { addTask } from '../../actions/taskActions';\r\nimport { selectTask } from '../../actions/taskActions';\r\n\r\nclass TasksCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 'active',\r\n      selected: this.props.selected\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps() {}\r\n\r\n  render() {\r\n    const { tasks } = this.props;\r\n    var tsk = [];\r\n    if (this.state.page === 'active') {\r\n      tasks.tasks.forEach(task => {\r\n        if (task.completed === false) tsk.push(task);\r\n      });\r\n    }\r\n    if (this.state.page === 'completed') {\r\n      tasks.tasks.forEach(task => {\r\n        if (task.completed === true) tsk.push(task);\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"card rounded-0 h-100\">\r\n        <div className=\"card-header\">\r\n          <ul className=\"nav nav-tabs card-header-tabs\">\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"nav-link active\"\r\n                onClick={() => {\r\n                  this.setState({ page: 'active' });\r\n                }}\r\n              >\r\n                Активные\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"nav-link active\"\r\n                onClick={() => {\r\n                  this.setState({ page: 'completed' });\r\n                }}\r\n              >\r\n                Выполненые\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div>\r\n            {this.props.selected.length === 0 ? null : (\r\n              <TasksControl\r\n                open={true}\r\n                selected={this.props.selected}\r\n                getTasks={this.props.getTasks}\r\n              />\r\n            )}\r\n          </div>\r\n          <div>\r\n            <CreateTaskString\r\n              createTask={this.props.addTask}\r\n              getTasks={this.props.getTasks}\r\n            />\r\n          </div>\r\n          <TaskTable tasks={tsk} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    tasks: store.tasks,\r\n    selected: store.tasks.selected\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTask: name => dispatch(addTask(name)),\r\n    getTasks: () => dispatch(getTasks()),\r\n    selectTask: (id, status) => dispatch(selectTask(id, status))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TasksCard);\r\n","import React from 'react';\r\n\r\nconst options = {\r\n\tmonth: 'long',\r\n\tday: 'numeric',\r\n\tyear: 'numeric',\r\n\ttimezone: 'UTC',\r\n\thour: 'numeric',\r\n\tminute: 'numeric',\r\n};\r\n\r\nclass Task extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\trender() {\r\n\t\tvar task = this.props.task;\r\n\t\tvar creatonTime = new Date(task.creationTime);\r\n\t\treturn (\r\n\t\t\t<div className=\"card rounded-0 h-100\">\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"h5 pr-2\">{task.name}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"h5 pr-2\">Дата создания: </span>\r\n\t\t\t\t\t\t{isFinite(creatonTime)\r\n\t\t\t\t\t\t\t? creatonTime.toLocaleString('ru', options)\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"h5 pr-2\">Напоминания: </span>\r\n\t\t\t\t\t\t{!isFinite(task.reminders)\r\n\t\t\t\t\t\t\t? task.reminders.map(reminder => {\r\n\t\t\t\t\t\t\t\t\tvar triggerTime = new Date(reminder.triggerTime);\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<span key={reminder.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{triggerTime.toLocaleString('ru', options)}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"h5 pr-2\">Цель: </span>\r\n\t\t\t\t\t\t{!isFinite(task.purpouse) ? task.purpouse.name : null}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"h5 pr-2\">Списки: </span>\r\n\t\t\t\t\t\t{!isFinite(task.taskLists)\r\n\t\t\t\t\t\t\t? task.taskLists.map(list => {\r\n\t\t\t\t\t\t\t\t\treturn <span key={list.id}>{list.name}</span>;\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className=\"h5 pr-2\">Описание: </span>\r\n\t\t\t\t\t\t{task.description}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TasksCard from '../../containers/tasksCard/tasksCard';\r\nimport Task from '../../components/Task/task';\r\nimport { getTasks } from '../../actions/taskActions';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: []\r\n    };\r\n    this.selectTask = this.selectTask.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getTasks();\r\n  }\r\n\r\n  selectTask(id) {\r\n    var arr = this.state.selected;\r\n    var flag = false;\r\n    for (var i = 0; i <= arr.length; i++) {\r\n      if (arr[i] === id) {\r\n        arr.splice(i, 1);\r\n        flag = true;\r\n      }\r\n    }\r\n    if (flag === false) {\r\n      arr = arr.concat(id);\r\n    }\r\n    this.setState({\r\n      selected: arr\r\n    });\r\n    console.log(arr);\r\n  }\r\n\r\n  render() {\r\n    const { tasks } = this.props;\r\n    var aside;\r\n    if (this.state.selected.length === 0) {\r\n      aside = <p>None</p>;\r\n    }\r\n    if (this.state.selected.length === 1) {\r\n      var task;\r\n      tasks.tasks.forEach(t => {\r\n        if (t.id === this.state.selected[0]) {\r\n          task = t;\r\n        }\r\n      });\r\n      aside = <Task task={task} />;\r\n      console.log(aside);\r\n    }\r\n    if (this.state.selected.length > 1) {\r\n      aside = <p>{this.state.selected.length}</p>;\r\n      console.log(aside);\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid h-100 tasks\">\r\n        <div className=\"row h-100\">\r\n          <div className=\"col-lg-7 col-sm-12 p-0\">\r\n            <TasksCard selectTask={this.selectTask} />\r\n          </div>\r\n          <div className=\"col-5 p-0\">\r\n            <span>{aside}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    tasks: store.tasks\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getTasks: () => dispatch(getTasks())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","export const CHECK_LOGIN_REQUEST = 'GET_PURPOSE_REQUEST';\r\nexport const CHECK_LOGIN_SUCCESS = 'GET_PURPOSE_SUCCESS';\r\nexport const CHECK_LOGIN_BAD = 'CHECK_LOGIN_BAD';\r\nexport const CHECK_LOGIN_ERROR = 'GET_PURPOSE_EXCEPTION';\r\n\r\nexport function checkAuth(login, password) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: CHECK_LOGIN_REQUEST,\r\n      payload: ''\r\n    });\r\n\r\n    var data = {\r\n      Login: login,\r\n      Password: password\r\n    };\r\n    var myInit = {\r\n      method: 'post',\r\n      headers: {\r\n        Accept: 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    };\r\n\r\n    fetch('api/Auth', myInit)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          dispatch({\r\n            type: CHECK_LOGIN_SUCCESS,\r\n            payload: response\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: CHECK_LOGIN_BAD,\r\n            payload: response\r\n          });\r\n        }\r\n      })\r\n      .catch(exc => {\r\n        if (exc.status === 200)\r\n          dispatch({\r\n            type: CHECK_LOGIN_ERROR,\r\n            payload: exc\r\n          });\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuth } from '../../actions/auth';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nclass Auth extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.auth.isLogged === true) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <main className=\"main h-100\">\r\n            <div className=\"container-fluid h-100\">\r\n              <div className=\"row h-100\">\r\n                <section className=\"p-0 d-flex align-items-center justify-content-center w-100\">\r\n                  <form className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"form-group row\">\r\n                        <label for=\"login\" className=\"col-sm-4 col-form-label\">\r\n                          Логин\r\n                        </label>\r\n                        <div class=\"col-sm-6\">\r\n                          <input\r\n                            id=\"login\"\r\n                            type=\"text\"\r\n                            onChange={() => {\r\n                              var text = document.getElementById('login').value;\r\n                              this.setState({ login: text });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group row\">\r\n                        <label\r\n                          for=\"password\"\r\n                          className=\"col-sm-4 col-form-label\"\r\n                        >\r\n                          Пароль\r\n                        </label>\r\n                        <div className=\"col-sm-8\">\r\n                          <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            onChange={() => {\r\n                              var text = document.getElementById('password')\r\n                                .value;\r\n                              this.setState({ password: text });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12 col-form-label\">\r\n                          <Link to=\"/register\">Нет аккаунта?</Link>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn-block btn btn-outline-dark\"\r\n                        onClick={() => {\r\n                          this.props.checkAuth(\r\n                            this.state.login,\r\n                            this.state.password\r\n                          );\r\n                        }}\r\n                      >\r\n                        Войти\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    checkAuth: (login, password) => dispatch(checkAuth(login, password))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Auth);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuth } from '../../actions/auth';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nclass Registration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: '',\r\n      password: '',\r\n      isCreated: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isCreated === true) {\r\n      return <Redirect to=\"/auth\" />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <main className=\"main h-100\">\r\n            <div className=\"container-fluid h-100\">\r\n              <div className=\"row h-100\">\r\n                <section className=\"p-0 d-flex align-items-center justify-content-center w-100\">\r\n                  <form className=\"card\">\r\n                    <div className=\"card-body\">\r\n                      <div class=\"form-group row\">\r\n                        <label for=\"login\" className=\"col-sm-4 col-form-label\">\r\n                          Логин\r\n                        </label>\r\n                        <div class=\"col-sm-6\">\r\n                          <input\r\n                            id=\"login\"\r\n                            type=\"text\"\r\n                            onChange={() => {\r\n                              var text = document.getElementById('login').value;\r\n                              this.setState({ login: text });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group row\">\r\n                        <label\r\n                          for=\"password\"\r\n                          className=\"col-sm-4 col-form-label\"\r\n                        >\r\n                          Пароль\r\n                        </label>\r\n                        <div class=\"col-sm-8\">\r\n                          <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            onChange={() => {\r\n                              var text = document.getElementById('password')\r\n                                .value;\r\n                              this.setState({ password: text });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12 col-form-label\">\r\n                          <Link to=\"/auth\">Уже есть аккаунт?</Link>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn-block btn btn-outline-dark\"\r\n                        onClick={() => {\r\n                          this.props.checkAuth(\r\n                            this.state.login,\r\n                            this.state.password\r\n                          );\r\n                        }}\r\n                      >\r\n                        Зарегистрироваться\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    checkAuth: (login, password) => dispatch(checkAuth(login, password))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Registration);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './header/header';\r\nimport Sidebar from './sidebar/sidebar';\r\nimport Main from './main/main';\r\nimport Auth from './auth/auth';\r\nimport './app.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Registration from './registration/registration';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    var body = (\r\n      <React.Fragment>\r\n        <Header />\r\n        <main className=\"main\">\r\n          <div className=\"container-fluid h-100\">\r\n            <div className=\"row h-100\">\r\n              <aside className=\"col-lg-2 col-sm-4 p-0\">\r\n                <Sidebar />\r\n              </aside>\r\n              <section className=\"col-lg-10 col-sm-8 p-0\">\r\n                <Main />\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/register\" component={Registration} />\r\n          <Route\r\n            path=\"/\"\r\n            children={() =>\r\n              this.props.auth.isLogged ? body : <Redirect to=\"/auth\" />\r\n            }\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    tasks: store.tasks,\r\n    taskLists: store.taskLists,\r\n    auth: store.auth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","export const SELECT_TASK = 'SELECT_TASK';\r\n\r\nexport function selectTask(taskId) {\r\n  return {\r\n    type: SELECT_TASK,\r\n    payload: taskId\r\n  };\r\n}\r\n","import { SELECT_TASK } from '../actions/taskCard';\r\nimport {\r\n  GET_TASKS_REQUEST,\r\n  GET_TASKS_SUCCESS,\r\n  GET_TASKS_ERROR,\r\n  CREATE_TASK_REQUEST,\r\n  CREATE_TASK_SUCCESS,\r\n  CREATE_TASK_BAD,\r\n  CREATE_TASK_ERROR,\r\n  COMPLETE_TASK_SUCCESS,\r\n  COMPLETE_TASK_REQUEST,\r\n  COMPLETE_TASK_ERROR\r\n} from '../actions/taskActions';\r\n\r\nconst initialState = {\r\n  tasks: [\r\n    {\r\n      id: 1,\r\n      name: 'testTask',\r\n      description: 'dddddddddddddddddddddddddd',\r\n      completed: false,\r\n      creationTime: '2019-05-14T20:18:02.4023759',\r\n      purpouse: null,\r\n      reminders: [],\r\n      taskLists: [\r\n        {\r\n          id: 1,\r\n          name: 'testTaskList',\r\n          color: 'red'\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  selected: [],\r\n  loading: false,\r\n  errors: []\r\n};\r\n\r\nexport function tasksReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TASKS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case GET_TASKS_SUCCESS:\r\n      return { ...state, loading: false, tasks: action.payload };\r\n    case GET_TASKS_ERROR:\r\n      return { ...state, loading: false, errors: action.payload };\r\n    case CREATE_TASK_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case CREATE_TASK_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tasks: state.tasks.concat(action.payload)\r\n      };\r\n    }\r\n    case CREATE_TASK_BAD: {\r\n      return { ...state, loading: false };\r\n    }\r\n    case CREATE_TASK_ERROR: {\r\n      return { ...state, loading: false, err: action.payload };\r\n    }\r\n    case COMPLETE_TASK_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case COMPLETE_TASK_SUCCESS: {\r\n      return { ...state, loading: false, selected: [] };\r\n    }\r\n    case COMPLETE_TASK_ERROR: {\r\n      return { ...state, loading: false, err: action.payload };\r\n    }\r\n    case SELECT_TASK: {\r\n      var flag = false;\r\n      var selected = state.selected;\r\n      for (var i = 0; i < selected.length; i++) {\r\n        if (selected[i] === action.payload) {\r\n          flag = true;\r\n          selected.splice(i, 1);\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        selected: flag ? selected : selected.join(action.payload)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TASK_LISTS_REQUEST,\r\n  GET_TASK_LISTS_SUCCESS,\r\n  GET_TASK_LISTS_EXCEPTION\r\n} from '../actions/taskListsActions';\r\n\r\nconst initialState = {\r\n  lists: [\r\n    {\r\n      id: 1,\r\n      name: 'testTaskList',\r\n      color: 'red'\r\n    }\r\n  ],\r\n  isLoading: false,\r\n  errors: []\r\n};\r\n\r\nexport function taskListsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TASK_LISTS_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case GET_TASK_LISTS_SUCCESS:\r\n      return { ...state, isLoading: false, lists: action.payload };\r\n    case GET_TASK_LISTS_EXCEPTION:\r\n      return { ...state, isLoading: false, errors: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PURPOSE_REQUEST,\r\n  GET_PURPOSE_SUCCESS,\r\n  GET_PURPOSE_EXCEPTION\r\n} from '../actions/purposeActions';\r\n\r\nconst initialState = {\r\n  purposes: [\r\n    {\r\n      id: 1,\r\n      name: 'testPurpose',\r\n      creationTime: '2019-05-14T20:18:02.4212122',\r\n      description: null\r\n    }\r\n  ],\r\n  isLoading: false,\r\n  errors: []\r\n};\r\n\r\nexport function purposesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PURPOSE_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case GET_PURPOSE_SUCCESS:\r\n      return { ...state, isLoading: false, lists: action.payload };\r\n    case GET_PURPOSE_EXCEPTION:\r\n      return { ...state, isLoading: false, errors: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CHECK_LOGIN_REQUEST,\r\n  CHECK_LOGIN_SUCCESS,\r\n  CHECK_LOGIN_BAD,\r\n  CHECK_LOGIN_ERROR\r\n} from '../actions/auth';\r\n\r\nconst initialState = {\r\n  isLogged: false,\r\n  isLoading: false,\r\n  token: '',\r\n  errors: []\r\n};\r\n\r\nexport function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHECK_LOGIN_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case CHECK_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLogged: true,\r\n        token: action.payload\r\n      };\r\n    case CHECK_LOGIN_BAD:\r\n      return { ...state, isLoading: false };\r\n    case CHECK_LOGIN_ERROR:\r\n      return { ...state, isLoading: false, errors: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { tasksReducer } from './tasks';\r\nimport { taskListsReducer } from './taskLists';\r\nimport { purposesReducer } from './purposes';\r\nimport { authReducer } from './auth';\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  taskLists: taskListsReducer,\r\n  purposes: purposesReducer,\r\n  auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers/root';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger, thunk));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/app';\r\nimport { store } from './store/configureStore';\r\nimport { Provider } from 'react-redux';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}